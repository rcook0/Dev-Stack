name: Build and Publish Dev-Stack

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      # Enable Buildx (containerd driver for cache export/import)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          driver: docker-container

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version tag
        id: version
        run: echo "TAG=v1.0.${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV

      # --- Build dev image ---
      - name: Build Dev image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .devcontainer/Dockerfile
          target: dev
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/dev-stack:dev
            ghcr.io/${{ github.repository_owner }}/dev-stack:dev-${{ env.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Build runtime image ---
      - name: Build Runtime image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .devcontainer/Dockerfile
          target: runtime
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/dev-stack:runtime
            ghcr.io/${{ github.repository_owner }}/dev-stack:runtime-${{ env.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Sanity tests on runtime image ---
      - name: Run sanity tests on runtime
        run: |
          docker run --rm ghcr.io/${{ github.repository_owner }}/dev-stack:runtime bash -c "
            echo '--- NumPy / Pandas ---' &&
            python3 -c 'import numpy, pandas; print(\"NumPy\", numpy.__version__, \"Pandas\", pandas.__version__)' &&

            echo '\n--- TA-Lib ---' &&
            python3 -c 'import talib, numpy as np; print(\"RSI\", talib.RSI(np.arange(1, 10, dtype=float), timeperiod=3))' &&

            echo '\n--- pandas-ta ---' &&
            python3 -c 'import pandas_ta as ta; print(\"Indicators available:\", len(ta.CommonIndicators))'
          "
